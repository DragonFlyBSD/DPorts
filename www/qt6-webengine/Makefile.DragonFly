# Minimum required compiler
USE_CLANG_FALLBACK=	default

BINARY_ALIAS+=		cpp=${LOCALBASE}/bin/clang-cpp${LLVM_DEFAULT} \
			cc=${LOCALBASE}/bin/clang${LLVM_DEFAULT} \
			c++=${LOCALBASE}/bin/clang++${LLVM_DEFAULT} \
			ar=${LOCALBASE}/bin/llvm-ar${LLVM_DEFAULT} \
			nm=${LOCALBASE}/bin/llvm-nm${LLVM_DEFAULT}

# XXX - This is a hack to force llvm to use libc++ C++ includes instead of base's gcc
CXXFLAGS+=	-nostdlib++ -stdlib=libc++ -I${LOCALBASE}/include -I${LOCALBASE}/include/cxxrt
CXXFLAGS+=	-cxx-isystem ${LOCALBASE}/llvm${LLVM_DEFAULT}/libcxx/include/c++/v1
LDFLAGS=	-L /usr/lib -L${LOCALBASE}/llvm${LLVM_DEFAULT}/libcxx/lib/c++ -L /lib

# Since FreeBSD has libc++ in base we need to rely on DPorts' libcxx
LIB_DIRS+=	${PREFIX}/llvm${LLVM_DEFAULT}/libcxx/lib
LIB_DEPENDS+=  	libc++.so.1:devel/libcxx${LLVM_DEFAULT}

dfly-patch:
	# Sandbox stuff
	@${MKDIR} ${WRKSRC}/src/3rdparty/chromium/sandbox/policy/dragonfly
	@${CP} ${WRKSRC}/src/3rdparty/chromium//sandbox/policy/freebsd/sandbox_freebsd.h \
	       ${WRKSRC}/src/3rdparty/chromium/sandbox/policy/dragonfly/sandbox_dragonfly.h
	@${CP} ${WRKSRC}/src/3rdparty/chromium/sandbox/policy/freebsd/sandbox_freebsd.cc \
	       ${WRKSRC}/src/3rdparty/chromium/sandbox/policy/dragonfly/sandbox_dragonfly.cc
	${REINPLACE_CMD} -e "s|FreeBSD|DragonFly|g" \
		-e "s|freebsd\/sandbox_freebsd.h|dragonfly\/sandbox_dragonfly.h|g" \
		${WRKSRC}/src/3rdparty/chromium/sandbox/policy/dragonfly/sandbox_dragonfly.h \
		${WRKSRC}/src/3rdparty/chromium/sandbox/policy/dragonfly/sandbox_dragonfly.cc \
