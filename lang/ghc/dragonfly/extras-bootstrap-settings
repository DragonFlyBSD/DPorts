[("GCC extra via C opts", "")
,("C compiler command", "cc")
,("C compiler flags", "")
,("C++ compiler flags", "")
,("C compiler link flags", "-fuse-ld=gold")
,("C compiler supports -no-pie", "YES")
,("Haskell CPP command", "cc")
,("Haskell CPP flags", "-E -undef -traditional")
,("ld command", "ld.gold")
,("ld flags", "")
,("ld supports compact unwind", "YES")
,("ld supports build-id", "YES")
,("ld supports filelist", "NO")
,("ld is GNU ld", "YES")
,("Merge objects command", "ld.gold")
,("Merge objects flags", "-r")
,("ar command", "ar")
,("ar flags", "q")
,("ar supports at file", "YES")
,("ranlib command", "ranlib")
,("otool command", "otool")
,("install_name_tool command", "install_name_tool")
,("touch command", "touch")
,("dllwrap command", "/bin/false")
,("windres command", "/bin/false")
,("libtool command", "libtool")
,("unlit command", "$topdir/bin/unlit")
,("cross compiling", "NO")
,("target platform string", "x86_64-portbld-dragonfly")
,("target os", "OSDragonFly")
,("target arch", "ArchX86_64")
,("target word size", "8")
,("target word big endian", "NO")
,("target has GNU nonexec stack", "YES")
,("target has .ident directive", "YES")
,("target has subsections via symbols", "NO")
,("target has RTS linker", "YES")
,("Unregisterised", "NO")
,("LLVM target", "x86_64-portbld-dragonfly")
,("LLVM llc command", "llc")
,("LLVM opt command", "opt")
,("LLVM clang command", "clang")
,("Use interpreter", "YES")
,("Support SMP", "YES")
,("RTS ways", "l debug thr thr_debug thr_l thr_p dyn debug_dyn thr_dyn thr_debug_dyn l_dyn thr_l_dyn thr_debug_p debug_p")
,("Tables next to code", "YES")
,("Leading underscore", "NO")
,("Use LibFFI", "NO")
,("RTS expects libdw", "NO")
]
